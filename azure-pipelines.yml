variables:
  buildConfiguration: 'Release'
  netSdkVersion: '8.x'

jobs:
- job: BuildAndRunCodeAnalysis
  displayName: Build and run code analysis
  pool:
    vmImage: windows-latest
  steps:
  - task: UseDotNet@2
    displayName: Set up .NET SDK
    inputs:
      version: $(netSdkVersion)
  - task: DotNetCoreCLI@2
    displayName: Build solution with code analysis
    inputs:
      command: build
      projects: '*.sln'
      arguments: -c $(buildConfiguration) -warnaserror

- job: RunTests
  displayName: Run tests on
  strategy:
    matrix:
      Linux:
        imageName: 'ubuntu-latest'
      macOS:
        imageName: 'macOS-latest'
      Windows:
        imageName: 'windows-latest'
  pool:
    vmImage: $(imageName)
  steps:
  - task: UseDotNet@2
    displayName: Set up .NET SDK
    inputs:
      version: $(netSdkVersion)
  - task: DotNetCoreCLI@2
    displayName: Build solution
    inputs:
      command: build
      projects: '*.sln'
      arguments: -c $(buildConfiguration) -p:RunCodeAnalysis=false
  - task: DotNetCoreCLI@2
    displayName: Run unit tests
    timeoutInMinutes: 3
    inputs:
      command: test
      projects: 'test/*/*UnitTests.csproj'
      arguments: -c $(buildConfiguration) -s "azure-pipelines.runsettings" --no-build
  - task: DotNetCoreCLI@2
    displayName: Run integration tests
    condition: succeededOrFailed()
    timeoutInMinutes: 30
    inputs:
      command: test
      projects: 'test/*/*IntegrationTests.csproj'
      arguments: -c $(buildConfiguration) -s "azure-pipelines.runsettings" --no-build
  - task: PublishPipelineArtifact@1
    displayName: Publish test artifacts
    condition: succeededOrFailed()
    inputs:
      artifactName: Artifacts $(imageName)
      targetPath: test/Atata.IntegrationTests/bin/$(buildConfiguration)/net8.0/artifacts